@import url("https://fonts.googlrapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap");

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

body {
    min-height: 100vh;
    background: url('img/background.jpg') no-repeat;
    background-size: cover; /*gambar tersebut akan diperbesar atau diperkecil sedemikian rupa sehingga seluruh area elemen tercakup oleh gambar, dan gambar akan mencoba mempertahankan proporsinya tanpa deformasi.*/
    background-position: center; /*gambar tersebut akan diatur di tengah elemen, baik secara horizontal maupun vertikal.*/
}

.header {
    position: fixed; /* Properti ini mengatur posisi elemen menjadi tetap terhadap viewport. Artinya, elemen tersebut akan tetap di posisinya bahkan saat halaman di-scroll.*/
    /* Dengan mengatur nilai top dan left menjadi 0, elemen akan melekat pada sudut kiri atas viewport.*/
    top: 0;
    left: 0;
    width: 100%; /* Penjelasan dengan analogi: Kita menginginkan bendera ini lebarannya harus sejauh tiang itu sendiri, sehingga mengisi seluruh bagian atas layar. */
    padding: 1.3rem 10%; /* Penjelasan dengan analogi:  Kita ingin ada sedikit jarak antara bendera dan tepi atas bendera serta antara bendera dengan sisi kanan dan kiri layar. Jadi, kita memberi bendera ini sedikit ruang jeda. */
    display: flex; /* Properti ini mengubah elemen induk menjadi "flex container" yang mengatur elemen-elemen anak di dalamnya dalam suatu baris atau kolom, membentuk suatu "flex layout". Dengan menggunakan display: flex;, Anda memberi elemen tersebut sifat "fleksibel" dalam menata elemen-elemen anaknya. Ini mirip dengan mengatur elemen-elemen dalam wadah yang fleksibel yang dapat mengatur posisi, ukuran, dan jarak di antara elemen-elemen tersebut. */
    justify-content: space-between; /* Ketika tim berdiri, mereka berusaha menjaga jarak yang sama di antara mereka sehingga mereka terlihat tertata rapi dan rapi */
    align-items: center; /* Properti ini digunakan dalam konteks flex container dan mengontrol penempatan vertikal elemen-elemen anak di dalamnya. Saat Anda mengatur align-items: center;, itu mengarahkan elemen-elemen anak untuk berada di tengah vertikal dari container. Dengan kata lain, mereka akan terpusat secara vertikal dalam kontainer.*/
    z-index: 100; /* Ini adalah cara kita memberi tahu bendera agar selalu terlihat di atas elemen lain di latar belakang, seolah-olah bendera ini sedikit lebih tinggi dari yang lain */
}

.header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .1); /*membuat background menjadi transparan sedikit */
    backdrop-filter: blur(50px);
    z-index: -1;
}

.header::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, .4), transparent);
    transition: .5s
}

.header:hover::after {
    left: 100%;
}

.logo {
    font-size: 2rem;
    color: #fff;
    text-decoration: none;
    font-weight: 700;
}

.navbar a {
    font-size: 1.15rem;
    color: #fff;
    text-decoration: none;
    font-weight: 500;
    margin-left: 2.5rem;
}

#check {
    display: none;
}

.icons {
    position: absolute; /* Ini seperti mengatakan, "Vas bunga ini harus ditempatkan dengan sangat spesifik, tidak peduli dengan elemen lain di sekitarnya. Aku ingin kontrol penuh atas posisinya." */
    right: 5%;
    font-size: 2.8rem;
    color: #fff;
    cursor: pointer;
    display: none;
}

/* BREAKPOINTS */
@media (max-width: 992px) {
    .header {
        padding: 1.3rem 5%; /* Padding pada atas dan bawah elemen akan menjadi 1.3 rem, sedangkan padding pada sisi kiri dan kanan elemen akan menjadi 5% dari lebar elemen. Ini adalah cara untuk menyesuaikan jarak dalam elemen "header" agar sesuai dengan layar yang lebih sempit.*/
    }
}
/* Padding pada atas dan bawah elemen akan tetap 1.3 rem, tetapi padding pada sisi kiri dan kanan akan disesuaikan menjadi 5% dari lebar elemen. Hal ini akan membuat elemen "header" lebih ramping ketika tampil di layar yang lebih kecil. */

@media (max-width: 768px) {
    .icons {
        display: inline-flex;
    }

    #check:checked~.icons #menu-icon {
        display: none;
    }

    .icons #close-icon {
        display: none;
    }

    #check:checked~.icons #close-icon {
        display: block;
    }

    .navbar {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        height: 0;
        background: rgba(0,0,0,.1);
        backdrop-filter: blur(50px);
        box-shadow: 0.5rem 1rem rgba(0, 0, 0, .1);
        overflow: hidden;
        transition: .3s ease;
    }

    #check:checked~.navbar {
        height: 17.7rem;
    }

    .navbar a {
        display: block;
        font-size: 1.1rem;
        margin: 1.9rem 0;
        text-align: center;
        transform: translateY(-50px);
        opacity: 0;
        transition: .3s ease;
    }

    #check:checked~.navbar a {
        transform: translateY(0);
        opacity: 1;
        transition-delay: calc(.15s * var(--i));
    }
}